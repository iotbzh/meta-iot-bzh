From c98056864c5ab63c87c3864d5a55d7982c2cf674 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Cl=C3=A9ment=20B=C3=A9nier?= <clement.benier@iot.bzh>
Date: Wed, 19 Dec 2018 04:38:51 +0100
Subject: [PATCH 2/2] draft patch: able to make a call with alexa
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I1e494d3f6ce2406a24854f7a5b42c01a81f66797
Signed-off-by: ClÃ©ment BÃ©nier <clement.benier@iot.bzh>
Signed-off-by: Clément Bénier <clement.benier@iot.bzh>
---
 binding/telephony-binding.c | 73 ++++++++++++++++++++++++-------------
 conf.d/wgt/config.xml.in    |  2 +-
 2 files changed, 48 insertions(+), 27 deletions(-)

diff --git a/binding/telephony-binding.c b/binding/telephony-binding.c
index 6ae079a..576646b 100644
--- a/binding/telephony-binding.c
+++ b/binding/telephony-binding.c
@@ -29,6 +29,8 @@
 
 #define HFP_UUID	"0000111f-0000-1000-8000-00805f9b34fb"
 
+#define VSHLAPI "vshlsupport"
+
 static OrgOfonoVoiceCallManager *vcm;
 static OrgOfonoVoiceCall *incoming_call, *voice_call;
 static afb_event_t call_state_changed_event;
@@ -152,6 +154,7 @@ static void incoming_call_cb(OrgOfonoVoiceCallManager *manager, gchar *op, gchar
 
 static void dialing_call_cb(OrgOfonoVoiceCallManager *manager, gchar *op, gchar *colp)
 {
+    AFB_NOTICE("CLEMENT::::dialing_call_cb");
 	struct json_object *call_info;
 
 	call_info = json_object_new_object();
@@ -333,7 +336,7 @@ static int phonecontrol_init(afb_api_t api)
 	json_object_array_add(array_events, json_object_new_string("dial"));
 	json_object_object_add(events, "actions", array_events);
 
-	return afb_api_call_sync(api, "vshl", "phonecontrol/subscribe", events, NULL, NULL, NULL);
+	return afb_api_call_sync(api, VSHLAPI, "phonecontrol/subscribe", events, NULL, NULL, NULL);
 }
 
 static int init(afb_api_t api)
@@ -387,9 +390,14 @@ static void process_connection_event(afb_api_t api, struct json_object *object)
 	}
 }
 
-static void process_phonecontrol_event(afb_api_t api, struct json_object *object)
+static void process_phonecontrol_event(afb_api_t api, struct json_object *obj)
 {
-	struct json_object *val = NULL, *payload = NULL;
+    //AFB_NOTICE("process_connection_event ...%d", json_object_get_type(object));
+    AFB_NOTICE("process_connection_event ...%s", json_object_get_string(obj));
+    struct json_object *object = json_tokener_parse(json_object_get_string(obj));
+	struct json_object *val = NULL, *value = NULL;
+    const char *callId = NULL;
+	struct json_object *defaultAddress = NULL;
 	const char *action = NULL;
 	const char *number = NULL;
 	struct json_object *response = json_object_new_object();
@@ -398,42 +406,55 @@ static void process_phonecontrol_event(afb_api_t api, struct json_object *object
 	json_object_object_add(response, "action", json_object_new_string("call_activated"));
 	json_object_object_add(response, "payload", payload_response);
 
-	json_object_object_get_ex(object, "action", &val);
-	if (!val)
+	json_object_object_get_ex(object, "callId", &val);
+	if (!val) {
+        AFB_NOTICE("callId is null");
 		return;
-	action = json_object_get_string(val);
-	if (g_strcmp0("dial", action))
+    }
+	callId = json_object_get_string(val);
+    AFB_NOTICE("callId...%s", callId);
+	//if (g_strcmp0("dial", action))
+	//	return;
+	json_object_object_get_ex(object, "callee", &val);
+	if (!val) {
+        AFB_NOTICE(".........NULL");
 		return;
+    }
+	json_object_object_get_ex(val, "defaultContactAddress", &defaultAddress);
+    if (!defaultAddress)
+        return;
+    AFB_NOTICE("DEFAULT ADRESS:::: %s", json_object_get_string(defaultAddress));
 
-	json_object_object_get_ex(object, "payload", &payload);
-	if (!payload)
-		return;
-
-	json_object_object_get_ex(payload, "callid", &val);
+	json_object_object_get_ex(defaultAddress, "value", &value);
 	if (!val)
 		return;
-	json_object_object_add(payload_response, "callid", val);
-	json_object_object_get_ex(payload, "value", &val);
-	if (!val)
-		return;
-	number = json_object_get_string(val);
+	number = json_object_get_string(value);
+    AFB_NOTICE("NUMBER:::: %s", number);
 
-	AFB_DEBUG("dial: %s...\n", number);
-	if(!vcm) {
-		AFB_ERROR("No vcm initialised");
-		return;
-	}
-	afb_api_call_sync(api, "vshl", "phonecontrol/publish", response, NULL, NULL, NULL);
+
+
+	//json_object_object_get_ex(payload, "callId", &val);
+	//if (!val)
+	//	return;
+	//json_object_object_add(payload_response, "callid", val);
+	//json_object_object_get_ex(payload, "value", &val);
+
+	//AFB_DEBUG("dial: %s...\n", number);
+	//if(!vcm) {
+	//	AFB_ERROR("No vcm initialised");
+	//	return;
+	//}
+	//afb_api_call_sync(api, VSHLAPI, "phonecontrol/publish", response, NULL, NULL, NULL);
 	if (voice_call) {
 		json_object_object_add(response, "action", json_object_new_string("call_failed"));
-		afb_api_call_sync(api, "vshl", "phonecontrol/publish", response, NULL, NULL, NULL);
+		afb_api_call_sync(api, VSHLAPI, "phonecontrol/publish", response, NULL, NULL, NULL);
 		AFB_ERROR("dial: cannot dial with active call");
 		return;
 	}
 
 	if (!ofono_voicecallmanager_dial(vcm, (gchar *)number, "")) {
 		json_object_object_add(response, "action", json_object_new_string("call_failed"));
-		afb_api_call_sync(api, "vshl", "phonecontrol/publish", response, NULL, NULL, NULL);
+		afb_api_call_sync(api, VSHLAPI, "phonecontrol/publish", response, NULL, NULL, NULL);
 		AFB_ERROR("dial fail");
 		return;
 	}
@@ -443,7 +464,7 @@ static void onevent(afb_api_t api, const char *event, struct json_object *object
 {
 	if (!g_ascii_strcasecmp(event, "Bluetooth-Manager/device_changes"))
 		process_connection_event(api, object);
-	else if (!g_ascii_strcasecmp(event, "vshl/phonecontrol/dial"))
+	else if (!g_ascii_strcasecmp(event, "vshlsupport/dial"))
 		process_phonecontrol_event(api, object);
 	else
 		AFB_ERROR("Unsupported event: %s\n", event);
diff --git a/conf.d/wgt/config.xml.in b/conf.d/wgt/config.xml.in
index ad44550..89956be 100644
--- a/conf.d/wgt/config.xml.in
+++ b/conf.d/wgt/config.xml.in
@@ -19,7 +19,7 @@
 
 	<feature name="urn:AGL:widget:required-api">
 		<param name="Bluetooth-Manager" value="ws" />
-		<param name="vshl" value="ws" />
+		<param name="vshlsupport" value="ws" />
 	</feature>
 
 	<feature name="urn:AGL:widget:required-binding">
-- 
2.19.2

