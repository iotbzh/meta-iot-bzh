From b936f0a0918fe84f4925820d9a7c309ac6451720 Mon Sep 17 00:00:00 2001
From: Thierry Bultel <thierry.bultel@iot.bzh>
Date: Fri, 15 Feb 2019 09:44:46 +0100
Subject: [PATCH 1/1] telephony-binding: handle vshl interface

- subscribe to vhsl controlphone
- parse event

Signed-off-by: Thierry Bultel <thierry.bultel@iot.bzh>
---
 binding/telephony-binding.c | 123 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 123 insertions(+)

diff --git a/binding/telephony-binding.c b/binding/telephony-binding.c
index a013196..24679fd 100644
--- a/binding/telephony-binding.c
+++ b/binding/telephony-binding.c
@@ -29,6 +29,8 @@
 
 #define OFONO_MODEM_INTERFACE	"org.ofono.Modem"
 
+#define VSHLAPI "vshlsupport"
+
 static OrgOfonoVoiceCallManager *vcm;
 static OrgOfonoVoiceCall *incoming_call, *voice_call;
 static afb_event_t call_state_changed_event;
@@ -136,6 +138,7 @@ static void call_state_changed_cb(OrgOfonoVoiceCall *vc, gchar *state)
 {
 	struct json_object *call_state;
 	call_state = json_object_new_object();
+	AFB_NOTICE("Call state changed. New call state: %s", state);
 	json_object_object_add(call_state, "state", json_object_new_string(state));
 	afb_event_push(call_state_changed_event, call_state);
 }
@@ -152,6 +155,7 @@ static void incoming_call_cb(OrgOfonoVoiceCallManager *manager, gchar *op, gchar
 
 static void dialing_call_cb(OrgOfonoVoiceCallManager *manager, gchar *op, gchar *colp)
 {
+    AFB_NOTICE("CLEMENT::::dialing_call_cb");
 	struct json_object *call_info;
 
 	call_info = json_object_new_object();
@@ -325,15 +329,134 @@ static const afb_verb_t verbs[]= {
 	{ }
 };
 
+static int phonecontrol_init(afb_api_t api)
+{
+	AFB_NOTICE("PHONECONTROL_INIT");
+	struct json_object *events = json_object_new_object();
+	struct json_object *array_events = json_object_new_array();
+	json_object_array_add(array_events, json_object_new_string("dial"));
+	json_object_object_add(events, "actions", array_events);
+
+	return afb_api_call_sync(api, VSHLAPI, "phonecontrol/subscribe", events, NULL, NULL, NULL);
+}
+
 static int init(afb_api_t api)
 {
 	AFB_NOTICE("Initializing telephony service");
 
+
+	phonecontrol_init(api);
+	AFB_NOTICE("ZZZZZZZZZZZ");
 	return ofono_init(api);
 }
 
+
+static void notify_connection_state_change(afb_api_t api, const char* callId, const char* callState) {
+	struct json_object *response = json_object_new_object();
+	struct json_object *payload_response = json_object_new_object();
+
+	json_object_object_add(response, "action", json_object_new_string("call_state_changed"));
+	json_object_object_add(response, "payload", payload_response);
+
+
+	json_object_object_add(payload_response, "callId", json_object_new_string(callId));
+	json_object_object_add(payload_response, "state", json_object_new_string(callState));
+
+	afb_api_call_sync(api, VSHLAPI, "phonecontrol/publish", response, NULL, NULL, NULL);
+}
+
+static void process_phonecontrol_event(afb_api_t api, struct json_object *obj)
+{
+    AFB_NOTICE("process_phonecontrol_event ...%s", json_object_get_string(obj));
+    struct json_object *object = json_tokener_parse(json_object_get_string(obj));
+	struct json_object *val = NULL, *value = NULL;
+    const char *callId = NULL;
+	struct json_object *defaultAddress = NULL;
+	const char *number = NULL;
+
+	json_object_object_get_ex(object, "callId", &val);
+	if (!val) {
+        AFB_NOTICE("callId is null");
+		return;
+    }
+	callId = json_object_get_string(val);
+    AFB_NOTICE("callId...%s", callId);
+	json_object_object_get_ex(object, "callee", &val);
+	if (!val) {
+        AFB_NOTICE(".........NULL");
+		return;
+    }
+	json_object_object_get_ex(val, "defaultContactAddress", &defaultAddress);
+    if (!defaultAddress)
+        return;
+    AFB_NOTICE("DEFAULT ADRESS:::: %s", json_object_get_string(defaultAddress));
+
+	json_object_object_get_ex(defaultAddress, "value", &value);
+	if (!val)
+		return;
+	number = json_object_get_string(value);
+    AFB_NOTICE("NUMBER:::: %s", number);
+
+	if (voice_call) {
+		AFB_ERROR("dial: cannot dial with active call");
+		return;
+	}
+
+	if (!ofono_voicecallmanager_dial(vcm, (gchar *)number, "")) {
+		AFB_ERROR("dial fail");
+		return;
+	}
+
+	notify_connection_state_change(api, callId, "ACTIVE");
+}
+
+static void process_phonecontrol_hangup(afb_api_t api, struct json_object *obj)
+{
+    AFB_NOTICE("process_phonecontrol_hangup ...%s", json_object_get_string(obj));
+    struct json_object *object = json_tokener_parse(json_object_get_string(obj));
+	struct json_object *val = NULL;
+    const char *callId = NULL;
+
+	json_object_object_get_ex(object, "callId", &val);
+	if (!val) {
+        AFB_NOTICE("callId is null");
+		return;
+    }
+	callId = json_object_get_string(val);
+    AFB_NOTICE("callId...%s", callId);
+	json_object_object_get_ex(object, "callee", &val);
+	if (!val) {
+        AFB_NOTICE(".........NULL");
+		return;
+    }
+
+    if (voice_call) {
+		AFB_DEBUG("Hangup voice call\n");
+		ofono_voicecall_hangup(voice_call);
+		notify_connection_state_change(api, callId, "IDLE");
+	} else if (incoming_call) {
+		AFB_DEBUG("Reject incoming call\n");
+		ofono_voicecall_hangup(incoming_call);
+		notify_connection_state_change(api, callId, "IDLE");
+	} else {
+		AFB_ERROR("Hangup: no active call");
+	}
+}
+
+static void onevent(afb_api_t api, const char *event, struct json_object *object)
+{
+	AFB_DEBUG("Telephony: onevent: %s", event);
+	if (!g_ascii_strcasecmp(event, "vshlsupport/dial"))
+		process_phonecontrol_event(api, object);
+	else if (!g_ascii_strcasecmp(event, "vshlsupport/stop"))
+		process_phonecontrol_hangup(api, object);
+	else
+		AFB_ERROR("Unsupported event: %s\n", event);
+}
+
 const afb_binding_t afbBindingV3 = {
 	.api = "telephony",
 	.verbs = verbs,
 	.init = init,
+	.onevent = onevent,
 };
-- 
2.16.4

